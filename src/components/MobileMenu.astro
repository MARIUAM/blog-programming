---
interface Props {
  items: {
    path: string;
    label: string;
  }[];
}

const { items } = Astro.props;
---

<div id="mobile-menu" class="mobile-menu">
  <nav class="menu-content">
    {items.map(item => (
      <a href={item.path}>{item.label}</a>
    ))}
  </nav>
</div>

<button id="menu-toggle" class="menu-toggle" aria-label="Toggle menu">
  <span class="hamburger"></span>
</button>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const body = document.body;

  menuToggle?.addEventListener('click', () => {
    menuToggle.classList.toggle('active');
    mobileMenu?.classList.toggle('active');
    body.classList.toggle('menu-open');
  });

  // Close menu when clicking outside
  document.addEventListener('click', (e) => {
    if (
      mobileMenu?.classList.contains('active') &&
      !mobileMenu.contains(e.target as Node) &&
      !menuToggle?.contains(e.target as Node)
    ) {
      menuToggle?.classList.remove('active');
      mobileMenu.classList.remove('active');
      body.classList.remove('menu-open');
    }
  });
</script>

<style>
  .mobile-menu {
    position: fixed;
    top: 0;
    right: -100%;
    width: 80%;
    max-width: 400px;
    height: 100vh;
    background: white;
    padding: 5rem 2rem 2rem;
    transition: right 0.3s ease;
    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
    z-index: 998;
  }

  .mobile-menu.active {
    right: 0;
  }

  .menu-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .menu-content a {
    color: var(--color-text);
    text-decoration: none;
    font-size: 1.25rem;
    padding: 0.5rem 0;
    transition: color 0.3s;
  }

  .menu-content a:hover {
    color: var(--color-primary);
  }

  .menu-toggle {
    display: none;
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    z-index: 999;
  }

  .hamburger {
    display: block;
    width: 24px;
    height: 2px;
    background: var(--color-text);
    position: relative;
    transition: background 0.3s;
  }

  .hamburger::before,
  .hamburger::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background: var(--color-text);
    transition: transform 0.3s;
  }

  .hamburger::before {
    top: -6px;
  }

  .hamburger::after {
    bottom: -6px;
  }

  .menu-toggle.active .hamburger {
    background: transparent;
  }

  .menu-toggle.active .hamburger::before {
    transform: rotate(45deg);
    top: 0;
  }

  .menu-toggle.active .hamburger::after {
    transform: rotate(-45deg);
    bottom: 0;
  }

  @media (max-width: 768px) {
    .menu-toggle {
      display: block;
    }
  }

  :global(body.menu-open) {
    overflow: hidden;
  }
</style>